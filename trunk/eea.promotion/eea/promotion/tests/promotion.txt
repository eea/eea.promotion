==========
Promotions
==========

First we create a news item and mark it as promotable:

  >>> self.setRoles(['Manager'])
  >>> id = portal.invokeFactory('News Item', id='test')
  >>> item = portal[id]
  >>> from eea.promotion.interfaces import IPromotable
  >>> from zope.interface import alsoProvides
  >>> alsoProvides(item, IPromotable)

When making a promotion out of it, the createPromotion action sets the marker
interface and redirects us to the edit form:

  >>> edit_form_url = item.restrictedTraverse("@@createPromotion")()
  >>> from eea.promotion.interfaces import IPromoted
  >>> IPromoted.providedBy(item)
  True


We have to implement the vocabulary that ThemeCentre otherwise provides:

  >>> from zope.interface import implements
  >>> from zope.component import provideUtility
  >>> from zope.app.schema.vocabulary import IVocabularyFactory
  >>> from zope.schema.vocabulary import SimpleVocabulary
  >>> class ThemesVocabulary(object):
  ...     implements(IVocabularyFactory)
  ...     def __call__(self, context):
  ...         return SimpleVocabulary.fromValues(['Snow', 'Space', 'Sand'])
  >>> provideUtility(ThemesVocabulary(), name=u'Allowed themes')

Now we can create a promotion of it:

  >>> from eea.promotion.interfaces import IPromotion
  >>> promotion = IPromotion(item)
  >>> promotion.locations = [u'Front Page', u'Themes']

Let's log in:

  >>> from Products.Five.testbrowser import Browser
  >>> from Products.PloneTestCase.setup import portal_owner, default_password
  >>> self.portal.error_log._ignored_exceptions = ()
  >>> browser = Browser()
  >>> browser.handleErrors = False
  >>> browser.open(self.portal.absolute_url())
  >>> browser.getControl(name='__ac_name').value = portal_owner
  >>> browser.getControl(name='__ac_password').value = default_password
  >>> browser.getControl(name='submit').click()

Now we can enter our edit form...

  >>> browser.open(edit_form_url)
  >>> browser.url == edit_form_url
  True

... and verify that our input fields have the values we applied above:

  >>> browser.getControl(name='form.locations').value
  'Front Page, Themes'

User selects new site locations:

  >>> browser.getControl(name='form.locations').value = "'Front Page', 'Global'"
  >>> browser.getControl(name='form.actions.apply').click()
  >>> promotion.locations
  [u'Front Page', u'Global']

